/*
 * (c) 2008-2009 Adam Lackorzynski <adam@os.inf.tu-dresden.de>
 *     economic rights: Technische Universit√§t Dresden (Germany)
 *
 * This file is part of TUD:OS and distributed under the terms of the
 * GNU General Public License 2.
 * Please see the COPYING-GPL-2 file for details.
 */

#define __ASSEMBLY__
#include <l4/bid_config.h>

.section .text.init, "ax"
.type _start,#function
.globl _start
_start:
	cmp	x1, #0
	b.eq	1f
	adr	x9, __l4_sys_syscall
	ldr	x2, [x9]
	cmp	x1, x2
	b.eq	1f
	str	x1, [x9]
	dmb ish
	isb
	dc cvac, x9
	ic ivau, x9
	isb
1:
	adrp    x9, crt0_stack_high
	add     x9, x9, :lo12:crt0_stack_high

	mov	sp, x9

#ifdef CONFIG_BID_PIE
	/* Save off the kip pointer */
	mov     x19, x0

	/* Calculate load address... subtract link address from real one */
	adrp    x0, :got:_start
	ldr     x0, [x0, #:got_lo12:_start]
	adr     x1, _start
	sub     x0, x1, x0

	/* Do relocations */
	bl reloc_static_pie

	/* restore kip pointer */
	mov     x0, x19
#endif

	adr	x30, _exit
	b	init

/* This is not a normal function and must not clobber any register.
 * This is a special syscall stub -- do not add any code! */
.global __l4_sys_syscall
.type __l4_sys_syscall, @function
__l4_sys_syscall:
#ifdef CONFIG_KERNEL_CPU_VIRT
	hvc #0
#else
	svc #0
#endif
	ret
.size __l4_sys_syscall, . - __l4_sys_syscall

.section ".bss"

	.balign	16
	.global crt0_stack_low
crt0_stack_low:
	.space	2048
	.global crt0_stack_high
crt0_stack_high:
